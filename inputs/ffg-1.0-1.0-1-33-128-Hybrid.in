
Section (Output)
{
  string OutFileBase = "rawdata/ffg-1.0-1.0-1-33-128-Hybrid";
  bool Restart = true;
}

Section (Parallel)
{
  int ProcsPerClone = 1;
}

Section (System)
{
  double tau = 0.0013362317068;
  int NumTimeSlices = 128;
  Array<double,1> Box(3) = [5.17051953218,5.17051953218,5.17051953218];
  Array<bool,1> IsPeriodic(3) = [true,true,true];
  Section (Particles)
  {
    Section (Species)
    {
      string Name = "eUp";
      string Type = "e";
      double lambda = 1.0;
      string Statistics = "FERMION";
      string NodeType = "FREE";
      int NumParticles = 33;
      int NumDim = 3;
      string InitPaths = "RESTART";
      string File = "rawdata/ffg-1.0-1.0-1-33-128-Hybrid";
    }
  }
}

Section (Actions)
{
  int NumImages = 1;
  int MaxLevels = 6;
  Array<string,1> PairActionFiles(1) = ["inputs/zero.PairAction"];

  Section (NodalAction)
  {
    string Type = "FREE";
    string Species = "eUp";
    bool StoreNodeDist = true;
    bool StoreNodeDet = true;
    bool UseNoDist = false;
    bool UseHybridDist = true;
  }
}

Section (Observables)
{
  Section (Observable)
  {
    string Type = "Energy";
    string Name = "Energy";
    string Description = "Total Energy";
    int Frequency = 1;
    double HistStart = 0.0;
    double HistEnd = 1.0;
    int HistPoints = 2;
    bool TrackSign = false;
    bool CountPerms = false;
  }
  Section (Observable)
  {
    bool AllClones = true;
    string Type = "PathDump";
    string Name = "PathDump";
    int TemporalFrequency = 1700;
  }

  Section (Observable)
  {
    string Type = "TimeAnalysis";
    string Name = "TimeAnalysis";
    int Frequency = 1;
  }


}

Section (Moves)
{

  Section (Move)
  {
    string Type = "BisectionBlock";
    string Name = "BisectionBlockeUp";
    string PermuteType = "TABLE";
    Array<double,1> Gamma(4) = [1.0,0.0,1.0,0.0];
    double epsilon = 1e-10;
    string Species = "eUp";
    int NumLevels = 6;
    int StepsPerBlock = 33;
  }
  Section (Move)
  {
    string Type = "RefSlice";
    string Name = "RefSliceeUp";
    string PermuteType = "NONE";
    int NumLevels = 6;
    string Species = "eUp";
  }
  Section (Move)
  {
    string Type = "ShiftMove";
    string Name = "Shift";
  }
}

Section (Algorithm)
{

  Section (Loop)
  {
    int Steps = 10000000;

    Section (Loop)
    {
      int Steps = 10;
      bool Equilibrate = false;
      Section (Move) {string Name = "BisectionBlockeUp";}
      Section (Move) {string Name = "RefSliceeUp";}
      Section (Observe) {string Name = "Energy";}
      Section (Observe) {string Name = "PathDump";}
      Section (Observe) {string Name = "TimeAnalysis";}
      Section (Move) {string Name = "Shift";}
    }
    Section (WriteData){}
  }

}
